<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>D Cube</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    .password-container {
      position: relative;
    }
    .toggle-password {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      color: #6B7280;
    }
    .password-requirements {
      font-size: 0.75rem;
      color: #6B7280;
      margin-top: 0.25rem;
    }
    .requirement {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .requirement.valid {
      color: #10B981;
    }
    .requirement.invalid {
      color: #EF4444;
    }
  </style>
</head>

<body class="bg-gray-900">
  <div class="mt-4 ml-4">
    <a class="text-white bg-blue-500 rounded-md py-2 px-4" href="/">Back</a>
  </div>
  <div class="min-h-screen flex items-center justify-center">
    <!-- Main login container -->
    <div class="bg-gray-800 p-8 rounded-lg shadow-md w-96">
      <!-- Welcome back header -->
      <h1 class="text-center text-red-500 text-3xl mb-2">Register to get started!</h1>
      

      <!-- Google sign-in button
      <div class="mb-4 text-center">
        <button
          class="flex items-center justify-center w-full py-2 px-4 text-white bg-blue-500 rounded-lg hover:bg-gray-600">
          <a href="/users/auth/google">Sign up with Google</a>
        </button>
      </div> -->

      <!-- Divider -->
      <div class="flex items-center justify-between my-4 text-gray-500">
        <span class="w-full border-b border-gray-600"></span>
        
        <span class="w-full border-b border-gray-600"></span>
      </div>


      <form action="/users/register" method="POST" id="registerForm">
        <div class="mb-4" class="w-full px-3  py-2 text-gray-900 rounded-lg bg-gray-200" required>
          <label class="block text-gray-400 text-sm mb-2" >Full Name</label>
          <input type="text" autocomplete="fullname"  name="fullname" class="w-full px-3  py-2 text-gray-900 rounded-lg bg-gray-200"
            placeholder="john" required />
          <label class="block text-gray-400 text-sm mb-2" for="email">Email</label>
          <input type="email" autocomplete="email" id="email" name="email" class="w-full px-3  py-2 text-gray-900 rounded-lg bg-gray-200"
            placeholder="john@gmail.com" required />
        </div>

        <div class="mb-6">
          <label class="block text-gray-400 text-sm mb-2" for="password">Password</label>
          <div class="password-container">
            <input type="password" id="password" name="password"
              class="w-full px-3 py-2 text-gray-900 rounded-lg bg-gray-200" placeholder="******" required />
            <span class="toggle-password" onclick="togglePassword('password')">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z" />
                <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
            </span>
          </div>
          <div class="password-requirements">
            <div class="requirement" id="length">
              <span>•</span>
              <span>At least 8 characters</span>
            </div>
            <div class="requirement" id="uppercase">
              <span>•</span>
              <span>One uppercase letter</span>
            </div>
            <div class="requirement" id="lowercase">
              <span>•</span>
              <span>One lowercase letter</span>
            </div>
            <div class="requirement" id="number">
              <span>•</span>
              <span>One number</span>
            </div>
            <div class="requirement" id="special">
              <span>•</span>
              <span>One special character</span>
            </div>
          </div>
        </div>

        <button type="submit" class="w-full py-2 px-4 bg-red-500 text-white rounded-lg hover:bg-red-600 transition">
          Register
        </button>
      </form>


    </div>
  </div>

  <script>
    function togglePassword(inputId) {
      const input = document.getElementById(inputId);
      const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
      input.setAttribute('type', type);
      
      // Toggle the eye icon
      const icon = input.nextElementSibling.querySelector('svg');
      if (type === 'password') {
        icon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z" />
        <path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />`;
      } else {
        icon.innerHTML = `<path stroke-linecap="round" stroke-linejoin="round" d="M3.98 8.223A10.477 10.477 0 001.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.45 10.45 0 0112 4.5c4.756 0 8.773 3.162 10.065 7.498a10.523 10.523 0 01-4.293 5.774M6.228 6.228L3 3m3.228 3.228l3.65 3.65m7.894 7.894L21 21m-3.228-3.228l-3.65-3.65m0 0a3 3 0 10-4.243-4.243m4.242 4.242L9.88 9.88" />`;
      }
    }

    // Password validation
    const password = document.getElementById('password');
    const requirements = {
      length: /.{8,}/,
      uppercase: /[A-Z]/,
      lowercase: /[a-z]/,
      number: /[0-9]/,
      special: /[!@#$%^&*(),.?":{}|<>]/
    };

    password.addEventListener('input', function() {
      const value = this.value;
      
      // Check each requirement
      for (const [key, regex] of Object.entries(requirements)) {
        const element = document.getElementById(key);
        if (regex.test(value)) {
          element.classList.add('valid');
          element.classList.remove('invalid');
        } else {
          element.classList.add('invalid');
          element.classList.remove('valid');
        }
      }
    });

    // Form validation
    document.getElementById('registerForm').addEventListener('submit', function(e) {
      const password = document.getElementById('password').value;
      let isValid = true;

      // Check all requirements
      for (const [key, regex] of Object.entries(requirements)) {
        if (!regex.test(password)) {
          isValid = false;
          break;
        }
      }

      if (!isValid) {
        e.preventDefault();
        alert('Please ensure your password meets all requirements.');
      }
    });
  </script>
</body>

</html>